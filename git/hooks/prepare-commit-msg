#!/bin/bash
#
# Hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, name this file to "prepare-commit-msg".
#######################
# env vars import has to be the first thing:
if [[ "$__ENV_VARS_LOADED_MARKER_VAR" != "loaded" ]]; then
    SHELL_ENVS=/etc/.bash_env_vars

    if [[ -r "$SHELL_ENVS" ]]; then
        source "$SHELL_ENVS"
    else
        echo -e "\nError: env vars file [$SHELL_ENVS] not found! Abort."
        exit 1
    fi
fi

# import common:
if ! type __COMMONS_LOADED_MARKER > /dev/null 2>&1; then
    if [[ -r "$_SCRIPTS_COMMONS" ]]; then
        source "$_SCRIPTS_COMMONS"
    else
        echo -e "\nError: common file [$_SCRIPTS_COMMONS] not found! Abort."
        exit 1
    fi
fi
# =========================

if is_work; then
    branch="$(get_git_branch --child)"
    # prepend the commit message with "MAV-<nr>: "
    #[[ "$branch" == MAV-* ]] && sed -i "1i${branch}: " "$1"
    [[ "$branch" =~ ^[A-Z]{3}-[0-9]+$ ]] && sed -i "1i${branch}: " "$1"
fi

exit 0
