# bashrc to use on remote host
###########################
# this prompt works well in WH jumpboxes (inputrc not working nicely, as we get double the prompt tail):
#PS1="\[\033[0;37m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ "${EUID}" -eq 0 ]]; then echo '\[\033[0;31m\]\h'; else echo '\[\033[1;36m\]${_SSH_PEARL_DEPTH_DASHES}> \u\[\033[0;37m\]@\[\033[0;96m\]\h'; fi)\[\033[0;37m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;37m\]]\n\[\033[0;37m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]"
# this promt works with our inputrc modification:
PS1="\[\033[0;37m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ "${EUID}" -eq 0 ]]; then echo '\[\033[0;31m\]\h'; else echo '\[\033[1;36m\]${_SSH_PEARL_DEPTH_DASHES}> \u\[\033[0;37m\]@\[\033[0;96m\]\h'; fi)\[\033[0;37m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;37m\]]\n\[\033[0;37m\]\[\033[0m\]"
# this prompt is copy of our local PS1, sans kube_ps1 (et al):
#PS1="\[\033[0;37m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[0;31m\]\h'; else echo '\[\033[0;33m\]\u\[\033[0;37m\]@\[\033[0;96m\]\h'; fi)\[\033[0;37m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;37m\]]\n"
####
export __REMOTE_SSH=1  # states we're logged in remotely, meaning no X11 etc.
export TERM=xterm-color
##########################################
# shell opts
# (note these hist opts appear to be disabling history, at least on some remotes):
#export HISTSIZE=-1
#export HISTFILESIZE=-1

# ignore dups:
export HISTCONTROL=ignoreboth
export HISTIGNORE='?:??:fhd:history:lat:ltr:latr'  # ignore commands from history
export HISTTIMEFORMAT='%F %T '
export PROMPT_COMMAND="history -a;$PROMPT_COMMAND"  # save comand to history immediately, not after the session terminates

shopt -u mailwarn       # disable mail notification:
shopt -s cdspell        # try to correct typos in path
shopt -s dotglob        # include dotfiles in path expansion
shopt -s nullglob       # unmatching globs to expand into empty string/list instead of being left unexpanded
shopt -s hostcomplete   # try to autocomplete hostnames
shopt -s huponexit      # send SIGHUP on when interactive login shell exits
shopt -s globstar       # ** in pathname expansion will match all files and zero or more directories and subdirs
shopt -s autocd         # if you type dir name, it's interpreted as an argument to cd
set -o vi               # needs to be added *before* fzf is sourced, otherwise fzf is screwed:
                        #     https://github.com/junegunn/fzf#key-bindings-for-command-line
stty -ixon              # disable ctrl+s/ctrl+q;

unset MAILCHECK

###########################
# alias/function overrides:
command -v nvim >/dev/null || alias nvim='vim'

if ! command -v tree >/dev/null; then
    function tree() {
        local opt OPTIND follow_links depth dir
        while getopts 'lL:' opt; do
            case "$opt" in
               l) follow_links='-L'  # note tree uses -l, while find has -L
                    ;;
               L) depth="-maxdepth $OPTARG"  # -L is tree's maxdepth arg
                  is_digit "$OPTARG" || { err "-L arg needs to be a digit (max depth)"; return 1; }
                    ;;
               *) return 1 ;;
            esac
        done
        shift "$((OPTIND-1))"

        dir="${1:-.}"
        [[ -d "$dir" ]] || { err "[$dir] is not a valid directory"; return 1; }
        find $follow_links "${dir}/" $depth | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"
    }
fi

###########################
if [[ -d "$HOME/.bash_env_vars_overrides" ]]; then
    for i in $HOME/.bash_env_vars_overrides/*; do
        [[ -f "$i" ]] && source "$i"
    done

    unset i
fi

###########################

if [[ -d "$HOME/.bash_funs_overrides" ]]; then
    for i in $HOME/.bash_funs_overrides/*; do
        [[ -f "$i" ]] && source "$i"
    done

    unset i
fi
###########################

# sys-specific aliases:
if [[ -d "$HOME/.bash_aliases_overrides" ]]; then
    for i in $HOME/.bash_aliases_overrides/*; do
        [[ -f "$i" ]] && source "$i"
    done

    unset i
fi
