#!/bin/bash
# handles basic system startup.
# note that services to be started are handled by different file, imported here.
# #####

session_startfile="$HOME/.session-startuplist"
logdir="$CUSTOM_LOGDIR"
################################################

#### ENTRY ####
# import common:
if [[ -f "$_SCRIPTS_COMMONS" && -r "$_SCRIPTS_COMMONS" ]]; then
    source "$_SCRIPTS_COMMONS"
else
    echo -e "\nError: common file \"$_SCRIPTS_COMMONS\" not found! Abort."
    # do not exit!
    #exit 1
fi

xrandr --output DP-2 --auto --right-of DP-1 &

# Load bitmap fonts:
xset +fp ~/.fonts
xset fp rehash
#sleep 1

# Set default cursor
#xsetroot -cursor_name left_ptr

# Load the Xresources database:
[[ -r ~/.Xresources ]] && xrdb -merge ~/.Xresources # Do not background!

# disable system beep:
xset -b &

# Start the programs/scripts in $session_startfile:
if [[ -r "$session_startfile" ]]; then
    source "$session_startfile" &
    # give some time before wm is launched:
    sleep 3
else
    if command -v rxvt-unicode; then
        rxvt-unicode &
    else
        xterm &
    fi
fi

## Start gpg-agent daemon
#if [[ -x /usr/bin/gpg-agent ]]; then
#kill $(ps ux | awk '/gpg-agent/ && !/awk/ {print $2}') >/dev/null 2>&1
#fi
#if [[ -x /usr/bin/gpg-agent ]]; then
#eval "$(/usr/bin/gpg-agent --daemon)"
#fi

# Check whether logfolder at /var/log and /data/ dir are existing:
for i in $logdir /data/; do
    if [[ ! -w "$i" ]]; then
        err_display  "$logdir is not created or no write permissions granted. Do it!" ".common_startup" &
    fi
done &

# Create necessary directories if don't exist:
for i in /data/.rsync "$_PERSISTED_TMP"; do
    if [[ ! -d "$i" ]] && ! mkdir "$i"; then
        err_display  "Tried to create required directory \"$i\" but mkdir failed." ".common_startup" &
    fi
done &

#TODO: this stuff needs to be done via logrotate perhaps?
# Check the filesize in MB of logs dir:
allowed_size="20"   # Max size in MB
check_max_allowed_size "$logdir" "$allowed_size"
