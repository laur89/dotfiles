#!/bin/bash

# Note if you leave last command without '&' (i.e. won't fork to background),
# you can exit your session by simply ending that application.
#---------------------------------------------------
logdir="/var/log/custom_logs/"

#---------------------------------------------------
export DISPLAY=:0.0
    
# See policykit k채itati tavaliste DE-de puhul /etc/xdg/autostart/polkit-gnome....desktop-ist;
# kui ei k채ivitanud, siis andis network-manager wireless v천rku 체hendamisel permission errori:
# teine variant, kuidas soovitatakse NM permission errorist jagu saada:
# loo fail  /etc/polkit-1/localauthority/50-local.d/org.freedesktop.NetworkManager.pkla sisuga:
#[nm-applet]
#Identity=unix-group:netdev
#Action=org.freedesktop.NetworkManager.*
#ResultAny=yes
#ResultInactive=no
#ResultActive=yes

/usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &


for PROG in "rxvt-unicode" "blueman-applet" "nm-applet" "xfce4-volumed" "todo.sh --auto" "skype" "spacefm" "Earth_sunlight_wallpaper_changer.sh" "sunlight_map_wallpaper_changer.sh" "keepassx" "delay_screensaver.py" "icedove" "ssh-agent"; do
    if ! [[ "$(ps -e | grep "\b$PROG\b")" ]]; then
        $PROG &
        echo "Launching $PROG ..."
    fi
done

# sets the cursor icon; Available themes reside in /usr/share/icons and local themes can be installed to ~/.icons.:
#xsetroot -cursor_name left_ptr &

#xfce4-power-manager &
#launchy &
# volti &

# set wallpaper (script will be run periodically by cron):
/usr/local/bin/wallpaper_changer.sh > /dev/null 2>&1 &

if ! [[ "$(ps -e | grep "\bmpd\b")" ]]; then
    mpd /etc/mpd.conf &
    echo "Launching mpd..."
fi
if ! [[ "$(ps -e | grep "\bdropbox\b")" ]]; then
    dropbox start &
    echo "Launching dropbox..."
fi
if ! [[ "$(ps -e | grep "\bxscreensaver\b")" ]]; then
    xscreensaver -no-splash &
    echo "Launching xscreensaver..."
fi

# Create necessary directories if don't exist:
for i in /data/.rsync /data/.tmp; do
    [ ! -d $i ] && mkdir $i
done &

# Check whether logfolder at /var/log and /data/ dir are existing:
for i in $logdir /data/; do
    if [ ! -w $i ]; then
        notify-send -t 0 -i gtk-dialog-error "$logdir is not created or no write permissions granted. Do it!" &
    fi
done &

# Check the filesize in MB of logs dir:
allowed_size="20"   # Max size in MB
size="$(( $(du -c $logdir | tail -n 1 | awk '{print $1}') / 1024 ))"
if [[ "$size" -gt "$allowed_size" ]]; then
    notify-send -t 0 -i gtk-dialog-error "Error: $logdir directory over $allowed_size MB in size!" &
fi


