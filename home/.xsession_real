#!/usr/bin/env bash
#
# base from https://github.com/infokiller/config-public/blob/master/.my_scripts/desktop_env/xsession
#
# see https://goral.net.pl/post/systemd-x-sessions/
# also https://github.com/vincentbernat/i3wm-configuration/blob/master/dotfiles/xsession
# to auto-login, see https://vincent.bernat.ch/en/blog/2021-startx-systemd
#
# - regarding env vars passed to services started by systemd, see
#   https://www.freedesktop.org/software/systemd/man/latest/environment.d.html#Configuration%20Format
##############
# see also:
# - https://github.com/liskin/dotfiles/


# shellcheck disable=SC2155
#readonly REPO_ROOT="$([[ ${CONFIG_GET_ROOT:-0} == 1 ]] && config-repo-root "${BASH_SOURCE[0]}" || echo "${HOME}")"
#readonly DESKTOP_ENV_UTILS_DIR="${REPO_ROOT}/.my_scripts/desktop_env"

source /etc/.global-bash-init || exit 1

readonly SET_X11_SETTINGS="$BASE_DATA_DIR/dev/scripts/system/set-x11-settings"  # note this is also defined in /etc/pm.d/sleep.d/99_sleep_reset_keyboard, just fyi

_command_exists() {
  # shellcheck disable=SC2317
  command -v -- "$1" &> /dev/null
}

_log_executed_lines() {
  # Use logger to log every line executed to the journal. See also:
  # https://unix.stackexchange.com/q/393097/126543
  exec {BASH_XTRACEFD}> >(command logger --tag xsession)
  PS4='${LINENO}: '
  set -x
}

_log_boxed_message() {
  {
    printf '=================================================================\n'
    printf '== [%s] %s\n' "$(date +"%F %T.%6N")" "$*"
    printf '=================================================================\n'
  } 1>&2
}

# note this guy doesn't exist for debian
_load_system_config() {
  # Source additional system config. Arch wiki notes it should be done:
  # https://wiki.archlinux.org/index.php/Xinit#xinitrc
  if [ -d /etc/X11/xinit/xinitrc.d ]; then
    for f in /etc/X11/xinit/xinitrc.d/*; do
      if [ -x "${f}" ]; then
        # shellcheck source=/dev/null
        source "${f}"
      fi
    done
    unset f
  fi
}

# NOTE: This must stay in sync with the `set_dpi_and_xresources` function in
# set-x11-settings.
_set_gdk_scaling() {
  local gsettings_scaling_factor=1
  local gdk3_scale=1
  local gdk3_dpi_scale=1
  if _command_exists gsettings; then
    gsettings set org.gnome.desktop.interface scaling-factor ${gsettings_scaling_factor}
  fi
  export GDK_SCALE="${gdk3_scale}"
  export GDK_DPI_SCALE="${gdk3_dpi_scale}"
}


_setup_environment() {
  # Source .profile so that its settings will apply to graphical logins from a
  # display manager (which is my default login procedure).
  # NOTE: For this to be safe, .profile must be safe to run without a terminal,
  # since some display managers like xdm source this file without a controlling
  # terminal. For more background see: https://wiki.debian.org/DotFiles
  # shellcheck source=../../.profile
  #source "${REPO_ROOT}/.profile"  # commented out as we're not using a display manager

  # Directory for storing KDE configuration and data. By default this is
  # ${HOME}/.kde4. See also:
  # https://userbase.kde.org/KDE_System_Administration/KDE_Filesystem_Hierarchy
  #export KDEHOME="${HOME}/.local/kde"  # not using KDE
  # Configures QT applications to use qt5ct (a configuration app) for the theme.
  #export QT_QPA_PLATFORMTHEME="qt5ct"  # we set it in env vars

  # Set ibus as the input method for GTK and QT. See also:
  # https://unix.stackexchange.com/questions/260601/understanding-setting-up-different-input-methods
  # TODO: move these env vars to env_vars?:
  export GTK_IM_MODULE='ibus'
  export QT_IM_MODULE='ibus'
  export XMODIFIERS='@im=ibus'

  # Reduce clutter in home directory.
  if [[ -e "${HOME}/.Xauthority" ]]; then
    export XAUTHORITY="${XDG_RUNTIME_DIR}/Xauthority"
    mv -f "${HOME}/.Xauthority" "${XAUTHORITY}"
  fi

  export XDG_SESSION_TYPE=x11

  #_set_gdk_scaling  # TODO: do we need this?

  # Export environment variables to dbus and systemd. Critical for things that
  # rely on DISPLAY, XAUTHORITY, PATH, etc, but also important for stuff like
  # GNUPG_HOME and GDK_SCALE.
  #dbus-update-activation-environment --systemd --all   # TODO this command errors

  # NOTE: As of 2019-05-24, there seems to be a race condition between the
  # updating of the environment and the start of services from
  # i3-session.target.  This is evident when hovering with the mouse over the
  # applets, where some of them don't have the correct mouse size (at least in
  # zeus18).
  # Since I only start i3-session.target after this function, I suspect that
  # dbus-update-activation-environment returns without blocking till the update
  # is complete, so I'm experimenting with calling import-environment directly
  # as well.
  # NOTE: As of 2019-06-02, this systemctl command doesn't improve things and
  # there are still issues with the environment not being fully set before copyq
  # and usbguard-applet are launched.
  #
  # NOTE: from laur 2024 - import-environment does log out 'Calling import-environment without a list of variable names is deprecated.',
  #       but without it i3 wouldn't have proper PATH set, causing programs referenced from
  #       e.g. ~/bin to not be found
   systemctl --user --wait import-environment
   systemctl --user daemon-reload
}

main() {
  local _dconf

  _dconf="$HOME/.config/dconf/dconf.ini"

  if [[ -s "$_dconf" ]]; then
    # see https://github.com/vincentbernat/i3wm-configuration/blob/master/dotfiles/xsession
    dconf load / < "$_dconf"
  fi

  # Logging for every line executed in the xsession script.
  _log_executed_lines
  _log_boxed_message 'Logging to systemd journal'
  #_load_system_config  # is this arch-specific?
  _setup_environment

  # shellcheck source=./set-x11-settings
  "$SET_X11_SETTINGS"

  # Start i3 and user services and block till i3 exits, as expected by the
  # display manager. Note that i3-session.target pulls i3, but it doesn't affect
  # the later command that waits for i3 to terminate.
  # (sleep 10 && "${REPO_ROOT}/submodules/desktop/activitywatch/dist/aw-qt") &

  # note we add the 'wait' flag, which disallows immediate exit, which in turn would stop X session right after it.
  systemctl --user start --wait xsession.target
}

main "$@"
