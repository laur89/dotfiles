#!/bin/bash
# contains userspace programs to start during startup;

# Note if you leave last command without '&' (i.e. won't fork to background),
# you can exit your session by simply ending that application.
#
# this file is launched/sourced by .common_startup
#---------------------------------------------------
SELF="${0##*/}"

declare -a PROGS=(
    urxvtd
    davmail
    keepassx
    copyq
    delay_screensaver
    xfce4-volumed
    guake
    wait_for_suspend_to_lock_screen.sh
    mopidy
    redshift
)

# oldies:
    #"icedove"
    #"volti"
    #"parcellite"
    #"delay_screensaver.py"
    #"blueman-applet"
    #"nm-applet"
    #"xfce4-power-manager"
    #"ssh-agent"
    #"skype"
    #"spacefm"
    #"franz"

# alternative to lock automatically when suspending/hibernating: (requires xss-lock)
# (currently using the shellscript that listens to dbus messages)
# xss-lock -- xscreensaver-command -lock &
#
# ---------------------------------------------------
# import common:
if ! type __COMMONS_LOADED_MARKER > /dev/null 2>&1; then
    if [[ -r "$_SCRIPTS_COMMONS" ]]; then
        source "$_SCRIPTS_COMMONS"
    else
        echo -e "\n    ERROR: common file [$_SCRIPTS_COMMONS] not found!"
        #exit 1   # prolly not a good idea to exit here
    fi
fi
# ---------------------------------------------------


# TODO: delete this?:
#export DISPLAY=:0.0

# See policykit k채itati tavaliste DE-de puhul /etc/xdg/autostart/polkit-gnome....desktop-ist;
# kui ei k채ivitanud, siis andis network-manager wireless v천rku 체hendamisel permission errori:
# teine variant, kuidas soovitatakse NM permission errorist jagu saada:
# loo fail  /etc/polkit-1/localauthority/50-local.d/org.freedesktop.NetworkManager.pkla sisuga:
#[nm-applet]
#Identity=unix-group:netdev
#Action=org.freedesktop.NetworkManager.*
#ResultAny=yes
#ResultInactive=no
#ResultActive=yes

#TODO: is necessary or not? (was related to xfce4-notifyd not starting)
# dbus-update-activation-environment --systemd --all  # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=842712
/usr/lib/polkit-gnome-authentication-agent-1 &
is_proc_running gnome-keyring-daemon || /usr/bin/gnome-keyring-daemon --start --components=secrets,ssh &


for PROG in "${PROGS[@]}"; do
    if ! is_proc_running "$PROG"; then
        echo "Launching ${PROG}..."
        $PROG &
        echo "Launched $PROG."
    fi
done

# sets the cursor icon; Available themes reside in /usr/share/icons and local themes can be installed to ~/.icons.:
#xsetroot -cursor_name left_ptr &

#launchy &

# set wallpaper (afterwards, script should be ran periodically by cron):
wallpaper_changer.sh > /dev/null 2>&1 &

#if ! [[ "$(ps -e | grep "\bmpd\b")" ]]; then
    #mpd /etc/mpd.conf &
    #echo "Launching mpd..."
#fi

#if ! is_proc_running dropbox; then
    #dropbox start &
    #echo "Launching dropbox..."
#fi

if ! is_proc_running seaf-daemon && ! is_work; then
    seaf-cli start &
fi

if ! is_proc_running xscreensaver; then
    xscreensaver -no-splash &
    echo "Launching xscreensaver..."
fi

if ! is_proc_running compton; then
    echo "Launching compton..."
    compton --config ~/.compton.conf --respect-prop-shadow --daemon
fi

if ! is_proc_running syndaemon && is_laptop; then
    syndaemon -t -K -i 1.5 &
    echo "Launching syndaemon..."
fi

# launch urxvtc (note we need to wait for the daemon to be launched first)
( until is_proc_running urxvtd; do sleep 1; done; sleep 2; urxvtc & ) &

# from https://www.roaringpenguin.com/wiki/index.php/Remind_use_case_1
if ! is_proc_running remind; then
    # note: notification command should be kept sync with the one in show_reminders.sh
    [[ -f "$HOME/.reminders" ]] && remind -z -k'notify-send -t 0 -i gtk-dialog-info reminder -- "%s" &' ~/.reminders &

    #[[ -f "$HOME/.reminders" ]] && remind -z -k'gxmessage -title "reminder" %s &' ~/.reminders &
    # this could be used as a starting point if bash is required:
    #remind -z -k'/bin/bash -c "notify-send -t 0 reminder -- \"$(echo "%s")\""  &' ~/.reminders
    echo "Launching remind..."
fi

if ! is_proc_running transmission_somethiNG_TODO && ! is_work; then
    # TODO: start transmission? client, server? where?
    true
fi

# synergy:
if is_laptop; then
    if ! is_proc_running synergyc; then
        echo "Launching syndergy client"

        if is_work; then
            # if need to change the command, make sure to update in acpi lid handler (laptop_lid_event.sh) as well:
            synergyc -f --no-tray --debug INFO --name work-laptop 10.180.18.149:24800 &
            #/data/progs/custom_builds/synergy/bin/synergyc -f --no-tray --debug INFO --name work-laptop 10.180.18.149:24800 &
        else
            # TODO personal laptop
            echo "TODO"
        fi

        set_keyboard_layout &   # otherwise using server's keyboard defaults to us map;
                                # alternatively, on systemd, consider localectl

                                # for permanent change:  dpkg-reconfigure keyboard-configuration
                                #           followed by  service keyboard-setup restart
    fi
else    # is NOT laptop, assuming desktop
    if ! is_proc_running synergys; then
        echo "Launching syndergy server"

        if is_work; then
            synergys -f --no-tray --debug INFO --name work-desktop -c ~/synergy.conf --log $CUSTOM_LOGDIR/synergy_server.log --address :24800 &
            #/data/progs/custom_builds/synergy/bin/synergys -f --no-tray --debug INFO --name work-desktop -c ~/synergy.conf --log $CUSTOM_LOGDIR/synergy_server.log --address :24800 &
        else
            # TODO personal deskderp
            echo "TODO"
        fi
    fi
fi

###############################
# modify configs:
if is_laptop; then
    if [[ -e ~/.xscreensaver ]]; then
        ( sed \
            --follow-symlinks \
            -i '/^lockTimeout:/s/^lockTimeout:.*/lockTimeout:\t0:00:05/g' ~/.xscreensaver || \
                err_display "unable to edit ~/.xscreensaver with sed" "$SELF"; ) &
    else
        err_display "xscreensaver conf does not exist; if not using xscreensaver anymore, remove logic from [$SELF]"
    fi
fi


# nvidia bug report:
#sleep 5;
#sudo nvidia-bug-report.sh >> /tmp/minuNVIDlog.log
#sleep 10;
#msmtp -t < /tmp/logs_to_send.log >> /tmp/minuMSMTP.log

