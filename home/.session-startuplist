#!/bin/bash
# contains userspace programs to start during startup;

# Note if you leave last command without '&' (i.e. won't fork to background),
# you can exit your session by simply ending that application.
#
# this file is launched/sourced by .common_startup
#---------------------------------------------------
SELF="${0##*/}"

declare -a PROGS=(
    davmail
    keepassxc
    copyq
    xfce4-volumed
    redshift
    devmon
)
# (temporarily) deactivated:
# mopidy

# oldies:
    #"icedove"
    #"volti"
    #"parcellite"
    #"delay_screensaver.py"
    #"blueman-applet"
    #"nm-applet"
    #"xfce4-power-manager"
    #"ssh-agent"
    #"skype"
    #"spacefm"
    #"franz"
    #guake
    #wait_for_suspend_to_lock_screen.sh   # not required with xss-lock

# alternative to lock automatically when suspending/hibernating: (requires xss-lock)
# (currently using the shellscript that listens to dbus messages)
# xss-lock -- xscreensaver-command -lock &
#
# ---------------------------------------------------
# import common:
if ! type __COMMONS_LOADED_MARKER > /dev/null 2>&1; then
    if [[ -r "$_SCRIPTS_COMMONS" ]]; then
        source "$_SCRIPTS_COMMONS"
    else
        echo -e "\n    ERROR: common file [$_SCRIPTS_COMMONS] not found!"
        #exit 1   # prolly not a good idea to exit here
    fi
fi
# ---------------------------------------------------


for PROG in "${PROGS[@]}"; do
    if ! is_proc_running "$PROG"; then
        echo "Launching ${PROG}..."
        $PROG &
        echo "Launched $PROG."
    fi
done

# sets the cursor icon; Available themes reside in /usr/share/icons and local themes can be installed to ~/.icons.:
#xsetroot -cursor_name left_ptr &

#launchy &

# set wallpaper (afterwards, script should be ran periodically by cron):
( sleep 5; wallpaper_changer.sh > /dev/null 2>&1; ) &

#if ! [[ "$(ps -e | grep "\bmpd\b")" ]]; then
    #mpd /etc/mpd.conf &
    #echo "Launching mpd..."
#fi

#if ! is_proc_running dropbox; then
    #dropbox start &
    #echo "Launching dropbox..."
#fi

if ! is_proc_running seaf-daemon && ! is_work; then
    seaf-cli start &
fi

#if ! is_proc_running xscreensaver; then
    #xscreensaver -no-splash &
    #echo "Launching xscreensaver..."
#fi
# TODO: modify our delay_screensaver to also send $xset s reset (see manpage for exact cmd)
# so it works also with xss, not only xscreensaver!
#
# for dimming ,see xrandr (https://unix.stackexchange.com/a/181501/47501)
if is_native && ! is_proc_running xss-lock; then
    #xss-lock -- lock -n &   # lock here is i3lock-fancy
    #
    # if you first want to do notif/screen dimmin, followed by lock:
    # note with this you gotta provide dim command, otherwise your lock command will be
    # executed after the first timeout, not second; if you don't care about dim delay,
    # but only lock, then just give 'xset s <delay>' (ie /wo the second period);
    # note if we do not start xss-lock, then dpms would kick in after 1st period;
    #xset +dpms s 180 120

    xset s 300
    #xss-lock -n /home/laur/bri.sh -- /data/progs/deps/homesick/repos/private-common/scripts/system/i3lock.sh &
    xss-lock -- lock &  # note this should be kept in-sync with your wm keybinding

    # turn screen off after 20min of idle:
    #xset dpms 0 0 1200
fi

# note compton causes WSL (at least in VcXsrv) to fail
#if ! is_windows && ! is_proc_running compton; then
if is_native && ! is_proc_running compton; then
    echo "Launching compton..."
    # note -b|--daemon option causes crashes/hangs with some drivers: (https://github.com/chjj/compton/issues/176)
    compton --config ~/.compton.conf --respect-prop-shadow &  #--daemon
fi

if is_native && ! is_proc_running syndaemon && is_laptop; then
    syndaemon -d -t -K -i 1.5
    echo "Launching syndaemon..."
fi

(
    sleep 20  # give time for screensaver app (xscreensaver, xss-lock,...) to startup beforehand
    if ! is_proc_running delay_screensaver; then
        delay_screensaver
    fi
) &

if ! is_proc_running urxvtd; then
    urxvtd --fork -o -q
    urxvtc
fi
#(
    #if ! is_proc_running urxvtd; then
        #urxvtd --fork -o -q
    #fi
    #sleep 2
    #urxvtc
#) &

# from https://www.roaringpenguin.com/wiki/index.php/Remind_use_case_1
if ! is_proc_running remind; then
    # note: notification command should be kept sync with the one in show_reminders.sh
    [[ -f "$HOME/.reminders" ]] && remind -z -k'notify-send -t 0 -i gtk-dialog-info reminder -- "%s" &' ~/.reminders &

    #[[ -f "$HOME/.reminders" ]] && remind -z -k'gxmessage -title "reminder" %s &' ~/.reminders &
    # this could be used as a starting point if bash is required:
    #remind -z -k'/bin/bash -c "notify-send -t 0 reminder -- \"$(echo "%s")\""  &' ~/.reminders
    echo "Launching remind..."
fi

if ! is_proc_running transmission_somethiNG_TODO && ! is_work; then
    # TODO: start transmission? client, server? where?
    true
fi

if is_virtualbox; then
    # as per https://askubuntu.com/a/1107875, VBoxClient gives us bidirectional clipboard:
    is_proc_running VBoxClient || VBoxClient --clipboard  # add --draganddrop if needed
fi

# synergy:
if is_native; then
if is_laptop; then
    if ! is_proc_running synergyc; then
        echo "Launching syndergy client"

        if is_work; then
            # !!! if need to change the command, make sure to update in acpi lid handler (laptop_lid_event.sh) as well:
            synergyc -f --no-tray --debug INFO --name work-laptop 10.180.18.149:24800 &
            #/data/progs/custom_builds/synergy/bin/synergyc -f --no-tray --debug INFO --name work-laptop 10.180.18.149:24800 &
        else
            # TODO personal laptop
            echo "TODO"
        fi

        set_keyboard_layout &   # otherwise using server's keyboard defaults to 'us' map;
                                # alternatively, on systemd, consider localectl

                                # for permanent change:  dpkg-reconfigure keyboard-configuration
                                #           followed by  service keyboard-setup restart
    fi
else    # is NOT laptop, assuming desktop
    if ! is_proc_running synergys; then
        echo "Launching syndergy server"

        if is_work; then
            synergys -f --no-tray --debug INFO --name work-desktop -c ~/synergy.conf --log "$CUSTOM_LOGDIR/synergy_server.log" --address :24800 &
            #/data/progs/custom_builds/synergy/bin/synergys -f --no-tray --debug INFO --name work-desktop -c ~/synergy.conf --log $CUSTOM_LOGDIR/synergy_server.log --address :24800 &
        else
            # TODO personal deskderp
            echo "TODO"
        fi
    fi
fi
fi

###############################
# modify configs:
if is_laptop && is_native; then
    if [[ -e ~/.xscreensaver ]]; then
        sed --follow-symlinks \
            -i '/^lockTimeout:/s/^lockTimeout:.*/lockTimeout:\t0:00:05/g' ~/.xscreensaver || \
                    err_display "unable to edit ~/.xscreensaver with sed" "$SELF"
    else
        err_display "xscreensaver conf does not exist; if not using xscreensaver anymore, remove logic from [$SELF]"
    fi
fi


# nvidia bug report:
#sleep 5;
#sudo nvidia-bug-report.sh >> /tmp/minuNVIDlog.log
#sleep 10;
#msmtp -t < /tmp/logs_to_send.log >> /tmp/minuMSMTP.log

