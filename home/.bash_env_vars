# defines the COMMON env vars that should be included in each shell session.
#
# !! might be used by root as well!
#
export MAIN_SYSTEM_USER=laur
export DEFAULT_SSH_USER=laur

# test whether the shell is interactive; if not, set missing env vars:
# (as per http://www.tldp.org/LDP/abs/html/intandnonint.html)
#if [[ -z "$DISPLAY" ]]; then
#if ! [[ -t 0 || -p /dev/stdin ]]; then
#if [[ ! -t 0 && ! -p /dev/stdin ]]; then
#if [[ "$(tty)" == "/dev/tty1" ]]; then
#if [[ "$-" != *i* ]] && [[ -z "$DISPLAY" ]]; then
#if [ "$PS1" ] ; then # interactive shell
#if [[ "$EUID" -eq 0 && -z "$DISPLAY" ]] || [[ "$-" != *i* ]]; then
if [[ "$-" != *i* ]]; then

#if ! shopt -q login_shell; then
#if [[ "$(tty)" != "/dev/tty1" ]] && [[ \"\$(who | cut -d' ' -f1 | sort | uniq)\" == \"\$usr\" ]]; do

    # find currently active user/id: (note 'type' _should_ be x11 || wayland, but seems to be 'tty' with xinitrc;
    #for sessionid in $(loginctl list-sessions --no-legend | awk '{ print $1 }'); do
        #loginctl show-session -p Id -p Name -p User -p State -p Type -p Remote $sessionid | sort
    #done | awk -F= '/Name/ { name = $2 } /User/ { user = $2 } /State/ { state = $2 } /Type/ { type = $2 } /Remote/ { remote = $2 } /User/ && remote == "no" && state == "active" && (type == "tty" || type == "wayland") { print user, name }'

    if [[ -z "$USER" ]]; then
        u="$(whoami)"
        [[ $? -eq 0 && -n "$u" && "$u" != root ]] && export USER="$u" && export MAIN_SYSTEM_USER="$u"  # TODO: do we want to define/override MAIN_SYSTEM_USER here?
        unset u
    fi

    # try to extract our DISPLAY value from $(who) output
    if [[ -z "$DISPLAY" ]]; then
        _DISP="$(LANG= who -u | grep "^$MAIN_SYSTEM_USER\b" | grep -oP '\s+\(\K:[0-9](\.[0-9])?(?=\))' | sort -u)"
        if [[ -z "$_DISP" || "$(wc -l <<< "$_DISP")" -ne 1 ]]; then
            echo -e "\n\n    ERROR: couldn't find our \$DISPLAY from [$_DISP]\n\n"
        else
            export DISPLAY="$_DISP"
        fi
        unset _DISP
    fi

    _ID="$(id -u "$MAIN_SYSTEM_USER")"
    _R_DIR="/run/user/$_ID"
    if [[ -z "$DBUS_SESSION_BUS_ADDRESS" ]]; then
        _BUS="$_R_DIR/bus"
        [[ "$_ID" =~ ^[0-9]+$ ]] && test -e "$_BUS" && export DBUS_SESSION_BUS_ADDRESS="unix:path=$_BUS"
        unset _BUS
    fi
    if [[ -z "$XDG_RUNTIME_DIR" ]]; then
        test -e "$_R_DIR" && export XDG_RUNTIME_DIR="$_R_DIR"
    fi
    unset _ID _R_DIR
fi

[[ -z "$GID" && -n "$USER" ]] && export GID="$(id -g "$USER")"


# load local (ie non-ssh'ed) system's vars:
if [[ -z "$PEARL_HOME" && "$__REMOTE_SSH" -ne 1 ]]; then
    # env vars to be loaded in local systems only (ie remote sessions should ignore this)
    # needs to be in same dir as the sourcing env vars file.

    export BASE_DATA_DIR="/data"
    export COMMON_CASTLE="/data/progs/deps/homesick/repos/dotfiles"

    #export JAVA_HOME=/usr/local/jdk_link  # superseded by sdkman
    export M2_HOME=$BASE_DATA_DIR/progs/maven/mvn_link
    export M2=$M2_HOME/bin
    export GRADLE_HOME=/usr/share/gradle

    export KAFKA_HOME=/data/progs/kafka/kafka

    # add additional locations to $PATH:
    i=''
    j=''
    for i in \
            /usr/local/sbin \
            /usr/sbin \
            /sbin \
            "$JAVA_HOME/bin" \
            "$M2" \
            "$BASE_DATA_DIR/dev/scripts/system" \
            "$BASE_DATA_DIR/dev/scripts/git" \
            "$HOME/bin" \
            "$HOME/.local/bin" \
            "$GRADLE_HOME/bin" \
            "$HOME/.rbenv/bin"; do
        if [[ -d "$i" && :$PATH: != *:"$i":* ]]; then
            j+="$i:"
        fi
    done
    [[ -n "$j" ]] && export PATH="${j}$PATH"
    unset i j

    # set path for global, but non-sudo, npm pacakges:  (https://stackoverflow.com/questions/10081293/install-npm-into-home-directory-with-distribution-nodejs-package-ubuntu/13021677#13021677)
    # note this also requires ~/.npmrc with 'prefix = ~/.npm-packages', which is not
    # supported by nvm:
    # ###############################################
    #export NPM_PACKAGES="$HOME/.npm-packages"
    #export PATH="$NPM_PACKAGES/bin:$PATH"
    ## Unset manpath so we can inherit from /etc/manpath via the `manpath` command:
    #unset MANPATH  # delete if you already modified MANPATH elsewhere in your configuration
    #MANPATH="$NPM_PACKAGES/share/man:$(manpath)"
    ## Tell Node about these packages
    #NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"


    export CUSTOM_LOGDIR='/var/log/custom_logs'
    export PANEL_FIFO='/tmp/panel-fifo'  # for BSPWM

    #export HGRCPATH="$HOME/.config/hg/hgrc"
    export PASSWORD_STORE_DIR="$HOME/.config/password-store"
    export GNUPGHOME="$HOME/.config/gnupg"

    # Update RC file locations for apps that don't support XDG:
    #export GTK2_RC_FILES="$HOME/.config/gtk-2.0/gtkrc"
    export GTK2_RC_FILES=$HOME/.gtkrc-2.0

    # see https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
    # NOTE:  make sure you know what you do; eg setting XDG_DATA_DIRS below effed up meld
    export XDG_CONFIG_HOME="/home/$USER/.config"
    #export XDG_DATA_HOME="/home/$USER/.local/share"
    #export XDG_DATA_DIR="/home/$USER/.local/share"
    #export XDG_DATA_DIRS="$XDG_DATA_DIR"

    export XDG_CACHE_HOME="/home/$USER/.cache"
    export XDG_DOWNLOAD_DIR="/home/$USER/Downloads"

    #export POWERLINE_CONFIG_COMMAND="powerline-config"
    ## /usr/local/bin/powerline-config
    export POWERLINE_NO_SHELL_PROMPT=NOPE.jpeg

    # hostnames
    export WORK_DESKTOP_HOSTNAME="WHOD5001556"
    export WORK_LAPTOP_HOSTNAME="WH5005264"
    export PERSONAL_DESKTOP_HOSTNAME="aliste"
    export PERSONAL_LAPTOP_HOSTNAME="8570w"

    # scripts' settings:
    # ###################
    export _SCRIPTS_COMMONS="$BASE_DATA_DIR/dev/scripts/system/utils.sh"
    export _DEF_CON_IF="/tmp/connected_default_if.dat"
    export _CON_IF="/tmp/connected_interfaces.dat"
    export _WIRELESS_IF="/tmp/wireless_interfaces.dat"
    export _TRUSTED_CON_MARKER="/tmp/connected_trusted_NW.dat"

    export _MAX_STARTING_VOL_FOR_EARPHONES=70
    export _PROJECTS_DIR="$HOME/dev/projects"
fi

command -v nvim > /dev/null 2>&1 && export EDITOR=nvim || export EDITOR=vim
export VISUAL="$EDITOR"  # note gvim doesn't play well with some stuff, eg crontab -e
export PAGER=less
export BROWSER=/usr/bin/firefox
export DEITY=

# Colorize less (from http://unix.stackexchange.com/questions/119/colors-in-man-pages)
# get color support for less:
export LESS="$LESS -FRXKi"
export MANPAGER='less -s -M +Gg'  # display scroll percentage in manpages
export GROFF_NO_SGR=1                  # for konsole and gnome-terminal
# colorize:
# ------- color 1
# Have less display colours
# from: https://wiki.archlinux.org/index.php/Color_output_in_console#man
#export LESS_TERMCAP_mb=$'\e[1;31m'     # begin bold
#export LESS_TERMCAP_md=$'\e[1;33m'     # begin blink
#export LESS_TERMCAP_so=$'\e[01;44;37m' # begin reverse video
#export LESS_TERMCAP_us=$'\e[01;37m'    # begin underline
#export LESS_TERMCAP_me=$'\e[0m'        # reset bold/blink
#export LESS_TERMCAP_se=$'\e[0m'        # reset reverse video
#export LESS_TERMCAP_ue=$'\e[0m'        # reset underline
# -----------------

# ------- color 2
#export LESS_TERMCAP_mb=$(tput bold; tput setaf 2) # green
#export LESS_TERMCAP_md=$(tput bold; tput setaf 6) # cyan
#export LESS_TERMCAP_me=$(tput sgr0)
#export LESS_TERMCAP_so=$(tput bold; tput setaf 3; tput setab 4) # yellow on blue
#export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
#export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 7) # white
#export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
#export LESS_TERMCAP_mr=$(tput rev)
#export LESS_TERMCAP_mh=$(tput dim)
#export LESS_TERMCAP_ZN=$(tput ssubm)
#export LESS_TERMCAP_ZV=$(tput rsubm)
#export LESS_TERMCAP_ZO=$(tput ssupm)
#export LESS_TERMCAP_ZW=$(tput rsupm)
##old settings (color 2.5 i guess?):
#export LESS_TERMCAP_mb=$(printf "\e[1;31m") \
#export LESS_TERMCAP_md=$(printf "\e[1;31m") \
#export LESS_TERMCAP_me=$(printf "\e[0m") \
#export LESS_TERMCAP_se=$(printf "\e[0m") \
#export LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
#export LESS_TERMCAP_ue=$(printf "\e[0m") \
#export LESS_TERMCAP_us=$(printf "\e[1;32m")
# -----------------

# ------- color 3
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\E[1;36m'     # begin blink
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline
# -----------------

# python-based tldr (https://github.com/tldr-pages/tldr-python-client) conf:
export TLDR_COLOR_BLANK="white"
export TLDR_COLOR_NAME="cyan"
export TLDR_COLOR_DESCRIPTION="white"
export TLDR_COLOR_EXAMPLE="green"
export TLDR_COLOR_COMMAND="red"
export TLDR_COLOR_PARAMETER="white"
export TLDR_CACHE_ENABLED=1
export TLDR_CACHE_MAX_AGE=720

# conscript (distribution mechanism for scala apps using github & mvn) env vars
# (from http://www.foundweekends.org/conscript/setup.html):
export CONSCRIPT_HOME="$HOME/.conscript"
export CONSCRIPT_OPTS="-XX:MaxPermSize=512M -Dfile.encoding=UTF-8"
export PATH=$CONSCRIPT_HOME/bin:$PATH


if [[ -d "$BASE_DATA_DIR/tmp" && -w "$BASE_DATA_DIR/tmp" ]]; then
    export _PERSISTED_TMP="$BASE_DATA_DIR/tmp"
else
    [[ -z "$PEARL_HOME" ]] && echo -e "bash_env_vars: preferred persisted tempdir at [$BASE_DATA_DIR/tmp] not found; defaulting to [/tmp]"
    export _PERSISTED_TMP='/tmp'
fi

# markpath/jumps dir:
export _MARKPATH_DIR=.shell_jump_marks

# FZF settings:  # https://github.com/sharkdp/fd
# gruvbox (or any other --color cmd here) taken from https://github.com/junegunn/fzf/issues/1602#issuecomment-511663634
export FZF_DEFAULT_OPTS='--ansi --bind=alt-k:preview-up,alt-p:preview-up --bind=alt-j:preview-down,alt-n:preview-down --bind=ctrl-r:toggle-all --bind=alt-w:toggle-preview-wrap --bind=?:toggle-preview --bind=ctrl-z:toggle-sort'  # note ansi is detrimental to fzf perf
#export FZF_DEFAULT_OPTS='--ansi --color=bg+:#ebdbb2,bg:#fbf1c7,spinner:#9d0006,hl:#928374,fg:#3c3836,header:#928374,info:#427b58,pointer:#9d0006,marker:#9d0006,fg+:#3c3836,prompt:#9d0006,hl+:#9d0006'  # note this is detrimental to fzf perf
#export FZF_DEFAULT_OPTS='--ansi --color fg:#D8DEE9,bg:#2E3440,hl:#A3BE8C,fg+:#D8DEE9,bg+:#434C5E,hl+:#A3BE8C,pointer:#BF616A,info:#4C566A,spinner:#4C566A,header:#4C566A,prompt:#81A1C1,marker:#EBCB8B'
#export FZF_DEFAULT_OPTS='--ansi --color fg:-1,bg:-1,hl:230,fg+:3,bg+:233,hl+:229,info:150,prompt:110,spinner:150,pointer:167,marker:174'


export FZF_DEFAULT_COMMAND='fd --hidden --follow --exclude .git'  # --type f perhaps?
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"  # note --multi is already enabled for c+t
#export FZF_CTRL_T_OPTS="--preview 'bat --color=always --line-range :500 {}'"  #using bat here only makes sense if ctrl_t_command is filtered by --type f
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type d"
# or if you want to use bfs instead of fd:
#export FZF_ALT_C_COMMAND="cd ~/; bfs -type d -nohidden | sed s/^\./~/"

export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:wrap"  # show the longer history; helps if cmd line is extra long
#export FZF_TMUX=1  # if you want to start fzf in a tmux pane

################## fzf-colors
# from https://github.com/nicodebo/base16-fzf/blob/master/bash/base16-gruvbox-dark-pale.config
# Base16 Gruvbox dark, pale
# Author: Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)

#_gen_fzf_default_opts() {

	#local color00='#262626'
	#local color01='#3a3a3a'
	#local color02='#4e4e4e'
	#local color03='#8a8a8a'
	#local color04='#949494'
	#local color05='#dab997'
	#local color06='#d5c4a1'
	#local color07='#ebdbb2'
	#local color08='#d75f5f'
	#local color09='#ff8700'
	#local color0A='#ffaf00'
	#local color0B='#afaf00'
	#local color0C='#85ad85'
	#local color0D='#83adad'
	#local color0E='#d485ad'
	#local color0F='#d65d0e'

	#export FZF_DEFAULT_OPTS+="
	#--color=bg+:$color01,bg:$color00,spinner:$color0C,hl:$color0D
	#--color=fg:$color04,header:$color0D,info:$color0A,pointer:$color0C
	#--color=marker:$color0C,fg+:$color06,prompt:$color0A,hl+:$color0D
	#"
#}

#_gen_fzf_default_opts; unset _gen_fzf_default_opts
################## /fzf-colors

# ripgrep env vars:
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"


# marker var used to detect whether env vars have been loaded:
export __ENV_VARS_LOADED_MARKER_VAR=loaded

