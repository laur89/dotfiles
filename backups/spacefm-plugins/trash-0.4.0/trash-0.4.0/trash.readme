README for trash

AUTHOR
  Tri Le <trile7 at gmail dot com>

SOURCE
  tarball can be downloaded from http://code.google.com/p/bashscripts/downloads/list
  scripts can be viewed at http://code.google.com/p/bashscripts/source/browse/trunk/trash
  aur package http://aur.archlinux.org/packages.php?ID=59403

DEPENDENCIES
  Required: coreutils, bash

INSTALL
  This installation procedure is for Arch's system.
  - download aur PKGBUILD from http://aur.archlinux.org/packages/tr/trash/PKGBUILD
  - in folder where PKGBUILD is stored, run "makepkg -i"

FEATURE
  - Move items to "trashcan"
  - Restore items from "trashcan"
  - Limit item size to move to "trashcan"
  - Empty "trashcan"
  - Support multiple partition/drive

DESCRIPTION
  Default config file is $HOME/.trashrc.  If it exists it will be read unless you specify an alternative file using --config option.

  Configuration file contains the following variables: trashcan and maxsize.  By default trashcan=$HOME/.local/share/Trash and maxsize=1000000000 (1GB).  "trashcan" define the location to store file when it's trashed.  "maxsize" defines the maximum file size to move to trashcan.

  If the item to be trashed is on a different mountpoint than the trashcan (different partition/drive), the script will create trash directories where this filesystem is mounted and store trashed file there.  It aslo create links to the main trashcan so that all trashed items can be viewed in one place.  For example, trashcan=/home/user/.local/share/Trash/files which is mounted at /home.  You trash a file /media/usbdrive/somefile which is mounted at /media/usbdrive.  The script will create /media/usbdrive/.Trash-user/{files,info} directories and somefile will be moved into this directory.  It also creates a link in the main trashcan to somefile so that somefile can also be seen here.

  Usage: trash [--config cfg] files
  Move files to $trashcan/files and create info files in $trashcan/info.  Info file contains original path and deletion date of the file in $trashcan/files.  The script uses this information to restore file

  Usage: trash [--config cfg] --restore files
  Restore files to their original location

  Usage: trash [--config cfg] --empty
  Remove all files and their infos from all trashcans

  Usage: trash [--config cfg] --info files
  Display information (orignal location and deletion date) for files in trashcan

  Usage: trash [--config cfg] --delete files
  Remove selected file and its info from trashcans

  Usage: trash [--config cfg] --list
  List files in main trashcan

  When trashing or restoring file, if file exists in destination location, "_n" will be added to the end of the filename where n is number from 0 to 99.

CHANGELOG
  v0.1
  - initial release
  v0.2
  - change list option to info
  v0.2.1
  - fixes create trash directories if they don't exist
  - add message that user must be in trash directory in order to query trashed file info.
  v0.3
  - add support for multiple partitions/drives
  v0.3.1
  - fixes remove file from trash
  - fixes remove file already in trashcan
  v0.3.2
  - add command to empty trashcans based on uid
  v0.3.3
  - do not empty main trash with empty-uid command
  v0.3.4
  - fix main trashcan doesn't empty if /home is not a mountpoint
  v0.3.5
  - fixed trash remove: properly remove directory and infofile in trashcan
  - fixed trash empty: always return 0 after process completes
  - fixed trash: display proper error if permission denied.
  v0.3.6
  - remove the need for full filepath
  v0.3.7
  - fixed trash symbolic link
  v0.3.8
  - add readme
  - fix restore from local trash doesn't remove link in main trash
  v0.3.9
  - fixed cannot trash file if "Trash" is in the filepath
  v0.4.0
  - fixed not empty dot file

COPYING
  Copyright (C) 2012 Tri Le <trile7 at gmail dot com>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
